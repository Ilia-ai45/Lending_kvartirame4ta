
import React, { useState } from 'react';

const formatCurrency = (value: number) => new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB', minimumFractionDigits: 0 }).format(value);

const ROOM_OPTIONS = ["–°—Ç—É–¥–∏—è", "1", "2", "3", "4+"];

// –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é ym –¥–ª—è TypeScript
declare global {
    interface Window {
        ym: (id: number, action: string, goalName: string) => void;
    }
}


interface ContactFormProps {
    showExtended: boolean;
    calculatorData?: {
        propertyPrice: number;
        downPayment: number;
        interestRate: number;
        monthlyPayment: number;
        quickDealDiscount: boolean;
    };
}

const ContactForm: React.FC<ContactFormProps> = ({ showExtended, calculatorData }) => {
    // Standard fields
    const [name, setName] = useState('');
    const [phone, setPhone] = useState('');
    
    // Extended fields
    const [rooms, setRooms] = useState('');
    const [priority, setPriority] = useState('');
    
    const [submitted, setSubmitted] = useState(false);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [submitError, setSubmitError] = useState<string | null>(null);

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setIsSubmitting(true);
        setSubmitError(null);

        let message = `*–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!*\n\n*–ò–º—è:* ${name}\n*–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}`;

        if (showExtended && calculatorData) {
            message += `\n\n*--- –†–∞—Å—á–µ—Ç –ø–æ –∏–ø–æ—Ç–µ–∫–µ ---*\n`;
            message += `–°—Ç–æ–∏–º–æ—Å—Ç—å: *${formatCurrency(calculatorData.propertyPrice)}*\n`;
            message += `–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å: *${formatCurrency(calculatorData.downPayment)}*\n`;
            message += `–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: *${formatCurrency(calculatorData.monthlyPayment)}*\n`;
            message += `–°—Ç–∞–≤–∫–∞: *${calculatorData.interestRate}%*\n`;
            if (calculatorData.quickDealDiscount) {
                message += `*üî• –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Å–∫–∏–¥–∫–∞ –∑–∞ –±—ã—Å—Ç—Ä—É—é —Å–¥–µ–ª–∫—É! (-100 000 —Ä—É–±)*\n`;
            }
            message += `\n*--- –ü–æ–∂–µ–ª–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ---*\n`;
            message += `–ö–æ–ª-–≤–æ –∫–æ–º–Ω–∞—Ç: *${rooms || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}*\n`;
            message += `–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: *${priority || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}*\n`;
        }

        try {
            const response = await fetch('/api/sendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message }),
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.');
            }

            setSubmitted(true);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
            if (typeof window.ym === 'function') {
                //–í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ XXXXXX –Ω–∞ ID –≤–∞—à–µ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–µ
                window.ym(97931388, 'reachGoal', 'FORM_SUBMIT_SUCCESS');
            }


        } catch (error: any) {
            console.error("Submit error:", error);
            setSubmitError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } finally {
            setIsSubmitting(false);
        }
    };

    return (
        <section id="contact" className="py-24 bg-zinc-900">
            <div className="container mx-auto px-6">
                <div className="max-w-3xl mx-auto bg-zinc-800 rounded-2xl p-8 md:p-12 shadow-2xl border border-zinc-700 text-center animate-reveal anim-scale-in">
                    {submitted ? (
                        <div className="py-8">
                            <h3 className="text-3xl font-bold text-amber-400 mb-3">–°–ø–∞—Å–∏–±–æ!</h3>
                            <p className="text-gray-300">–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!</p>
                        </div>
                    ) : (
                        <>
                            {showExtended && calculatorData ? (
                                <>
                                    <h2 className="text-3xl sm:text-4xl font-extrabold text-white mb-4">–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å</h2>
                                    <p className="text-base sm:text-lg text-gray-400 mb-8">
                                        –ú—ã —É–∂–µ –∑–Ω–∞–µ–º –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –£—Ç–æ—á–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏, –∏ —è –ø–æ–¥–±–µ—Ä—É –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.
                                    </p>
                                    <div className="bg-zinc-900/50 border border-zinc-700 rounded-lg p-4 mb-6 text-left grid grid-cols-2 gap-4 text-sm">
                                        <div><span className="text-gray-400">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span> <strong className="block text-white">{formatCurrency(calculatorData.propertyPrice)}</strong></div>
                                        <div><span className="text-gray-400">–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å:</span> <strong className="block text-white">{formatCurrency(calculatorData.downPayment)}</strong></div>
                                        <div><span className="text-gray-400">–ü–ª–∞—Ç–µ–∂ –≤ –º–µ—Å—è—Ü:</span> <strong className="block text-white">{formatCurrency(calculatorData.monthlyPayment)}</strong></div>
                                        <div><span className="text-gray-400">–°—Ç–∞–≤–∫–∞:</span> <strong className="block text-white">{calculatorData.interestRate}%</strong></div>
                                    </div>
                                    {calculatorData.quickDealDiscount && (
                                        <div className="bg-amber-500/10 border border-amber-500 text-amber-400 rounded-lg p-4 mb-8 text-center">
                                            <p className="font-bold text-lg">–£ –ù–ê–° –°–†–û–ß–ù–´–ô –ü–û–ö–£–ü–ê–¢–ï–õ–¨!!!</p>
                                            <p>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ -100 000 —Ä—É–±–ª–µ–π.</p>
                                        </div>
                                    )}
                                </>
                            ) : (
                                <>
                                    <h2 className="text-3xl sm:text-4xl font-extrabold text-white mb-4">–ì–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥?</h2>
                                    <p className="text-base sm:text-lg text-gray-400 mb-8">
                                        –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∏ —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –¥–ª—è –≤–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –ª—É—á—à–∏—Ö –Ω–æ–≤–æ—Å—Ç—Ä–æ–µ–∫ –¢—é–º–µ–Ω–∏. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –Ω–∏ –∫ —á–µ–º—É –Ω–µ –æ–±—è–∑—ã–≤–∞–µ—Ç.
                                    </p>
                                </>
                            )}

                            <form onSubmit={handleSubmit} className="space-y-6 max-w-lg mx-auto text-left">
                                {showExtended && (
                                    <>
                                        <div>
                                            <label className="block font-semibold text-gray-300 mb-3 text-center">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç</label>
                                            <div className="grid grid-cols-3 sm:grid-cols-5 gap-2">
                                                {ROOM_OPTIONS.map(opt => (
                                                    <button type="button" key={opt} onClick={() => setRooms(opt)} className={`px-2 py-2 rounded-lg transition-colors duration-200 font-semibold ${rooms === opt ? 'bg-amber-500 text-gray-900' : 'bg-zinc-700 hover:bg-zinc-600 text-white'}`}>
                                                        {opt}
                                                    </button>
                                                ))}
                                            </div>
                                        </div>
                                        <div>
                                            <label htmlFor="priority" className="block font-semibold text-gray-300 mb-2 text-center">–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º?</label>
                                            <input
                                                type="text"
                                                id="priority"
                                                value={priority}
                                                onChange={(e) => setPriority(e.target.value)}
                                                className="w-full px-4 py-3 bg-zinc-700 border border-zinc-600 text-white rounded-lg focus:ring-amber-500 focus:border-amber-500 transition placeholder-gray-400"
                                                placeholder="–®–∫–æ–ª–∞, –î–µ—Ç—Å–∫–∏–π —Å–∞–¥, –†–∞–π–æ–Ω,"
                                            />
                                        </div>
                                    </>
                                )}
                                <div>
                                    <label htmlFor="name" className="sr-only">–í–∞—à–µ –∏–º—è</label>
                                    <input
                                        type="text"
                                        id="name"
                                        value={name}
                                        onChange={(e) => setName(e.target.value)}
                                        required
                                        className="w-full px-4 py-3 bg-zinc-700 border border-zinc-600 text-white rounded-lg focus:ring-amber-500 focus:border-amber-500 transition placeholder-gray-400"
                                        placeholder="–í–∞—à–µ –∏–º—è"
                                    />
                                </div>
                                <div>
                                    <label htmlFor="phone" className="sr-only">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                                    <input
                                        type="tel"
                                        id="phone"
                                        value={phone}
                                        onChange={(e) => setPhone(e.target.value)}
                                        required
                                        className="w-full px-4 py-3 bg-zinc-700 border border-zinc-600 text-white rounded-lg focus:ring-amber-500 focus:border-amber-500 transition placeholder-gray-400"
                                        placeholder="+7 (___) ___-__-__"
                                    />
                                </div>
                                <div>
                                    <button
                                        type="submit"
                                        disabled={isSubmitting}
                                        className="w-full py-3 px-4 rounded-full text-lg font-semibold text-gray-900 bg-amber-500 hover:bg-amber-400 focus:outline-none focus:ring-4 focus:ring-amber-500/30 transition-all duration-300 disabled:bg-gray-500 disabled:cursor-not-allowed"
                                    >
                                        {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : (showExtended ? '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É' : '–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É')}
                                    </button>
                                </div>
                                {submitError && (
                                    <p className="text-sm text-red-400 mt-4 text-center bg-red-900/20 p-3 rounded-lg">
                                        {submitError}
                                    </p>
                                )}
                            </form>
                            <p className="text-xs text-gray-500 mt-6 text-center">
                                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.
                            </p>
                        </>
                    )}
                </div>
            </div>
        </section>
    );
};

export default ContactForm;